CREATE TABLE `USER`
(
	USER_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    FULL_NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    NO_HP VARCHAR(20) NOT NULL UNIQUE,
    `PASSWORD` VARCHAR(100) NOT NULL,
    PROFILE_PICTURE LONGTEXT,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE TUTOR
(
	TUTOR_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    TUTOR_TITLE VARCHAR(150) NOT NULL,
    TUTOR_DESC LONGTEXT,
    USER_ID BIGINT NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES `USER`(USER_ID)
);

CREATE TABLE CLASS_CATEGORY
(
	CLASS_CATEGORY_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    CATEGORY_CODE VARCHAR(10) NOT NULL UNIQUE,
    CATEGORY_DESC VARCHAR(30) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE PRODUCT
(
	PRODUCT_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    PRODUCT_TITLE VARCHAR(100) NOT NULL,
    PRODUCT_SUMMARY VARCHAR(100),
    PRODUCT_DESC LONGTEXT,
    PRODUCT_PRICE NUMERIC(17, 2) NOT NULL,
    TUTOR_ID BIGINT NOT NULL,
    CATEGORY_CODE VARCHAR(10) NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (TUTOR_ID) REFERENCES TUTOR(TUTOR_ID),
    FOREIGN KEY (CATEGORY_CODE) REFERENCES CLASS_CATEGORY(CATEGORY_CODE)
);

CREATE TABLE CLASS
(
	CLASS_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    CLASS_CURRENT_PROGRESS INT NOT NULL DEFAULT 0,
    IS_COMPLETED BOOLEAN DEFAULT FALSE,
    USER_ID BIGINT NOT NULL,
    PRODUCT_ID BIGINT NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES `USER`(USER_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE CLASS_MODULE
(
	CLASS_MODULE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    MODULE_LANGUAGE VARCHAR(30) NOT NULL DEFAULT 'Bahasa Indonesia',
    MODULE_TITLE VARCHAR(20) NOT NULL,
    PRODUCT_ID BIGINT NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE CLASS_MATERIAL
(
	CLASS_MATERIAL_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    MATERIAL_TITLE VARCHAR(100) NOT NULL,
    MATERIAL_TYPE VARCHAR(15) NOT NULL,
    MATERIAL_DURATION INT,
    MATERIAL_CONTENT LONGTEXT NOT NULL,
    MATERIAL_DESC LONGTEXT,
	PRODUCT_ID BIGINT NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE PRETEST
(
	PRETEST_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    PRETEST_QUESTION LONGTEXT NOT NULL,
    PRETEST_ANSWER CHAR(1) NOT NULL,
    PRETEST_OPTION_1 LONGTEXT,
    PRETEST_OPTION_2 LONGTEXT,
    PRETEST_OPTION_3 LONGTEXT,
    PRETEST_OPTION_4 LONGTEXT,
    IS_LAST_QUESTION BOOLEAN DEFAULT FALSE,
    CLASS_MATERIAL_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CLASS_MATERIAL_ID) REFERENCES CLASS_MATERIAL(CLASS_MATERIAL_ID)
);

CREATE TABLE PAYMENT
(
	PAYMENT_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    PAYMENT_TYPE VARCHAR(10) NOT NULL,
    PAYMENT_NAME VARCHAR(30) NOT NULL,
    PAYMENT_LOGO LONGTEXT NOT NULL,
    PAYMENT_GUIDE LONGTEXT NOT NULL,
    PAYMENT_CODE VARCHAR(30) NOT NULL,
    PAYMENT_STATUS VARCHAR(10) NOT NULL DEFAULT 'PEND',
    PAYMENT_DT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PAYMENT_AMOUNT NUMERIC(17, 2) NOT NULL DEFAULT 0,
    ADMIN_FEE NUMERIC(17, 2) NOT NULL DEFAULT 0,
    DURATION_BEFORE_EXP INT NOT NULL DEFAULT 60,
    USER_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES `USER`(USER_ID)
);

CREATE TABLE `ORDER`
(
	ORDER_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    ORDER_INVOICE_NO VARCHAR(50) NOT NULL,
	ORDER_DT  DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ORDER_STATUS VARCHAR(10) NOT NULL DEFAULT 'PEND',
    PAYMENT_ID BIGINT NOT NULL,
    PRODUCT_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
    FOREIGN KEY (USER_ID) REFERENCES `USER`(USER_ID)
);

CREATE TABLE REVIEW
(
	REVIEW_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    REVIEW_DESC LONGTEXT,
    RATING NUMERIC(2, 1),
    USER_ID BIGINT NOT NULL,
    PRODUCT_ID BIGINT NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES `USER`(USER_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);